#for one file
mefinder find -c ./WMW942_plasmid_AD443.fasta WMW942_plasmid_AD443 --blastn-path /mnt/storage7/woranich/ncbi-blast-2.16.0+/bin/blastn

#To do the loop
#!/bin/bash

# Define the path to blastn executable
BLASTN_PATH="/mnt/storage7/woranich/ncbi-blast-2.16.0+/bin/blastn"

# Check if the output directory exists, if not, create it
OUTPUT_DIR="kp_asia_asm"
mkdir -p "$OUTPUT_DIR"

# Loop through each .fasta file in the current directory
for file in *.fasta; do
    # Extract the base name without extension
    base_name=$(basename "$file" .fasta)

    # Run mefinder command
    mefinder find -c "$file" "$OUTPUT_DIR/$base_name" --blastn-path "$BLASTN_PATH"
done

echo "All files have been processed."

##To extract the results of mge

# Create the new mamba environment for python
mamba create -n python python

# Create new py script 
nano extractmge.py

# Add the following script
##################
import os
import pandas as pd

# Directory containing the CSV files (this can be current working directory)
input_directory = os.getcwd()  # This will take the current working directory
output_file = 'extracted_mge_info.csv'  # Output file in the same directory

# List to store the extracted data
extracted_data = []

# Function to split sample name and plasmid name
def extract_sample_and_plasmid(sample_full_name):
    sample_parts = sample_full_name.split('_')
    sample_name = sample_parts[0]  # First part (e.g., "Kb-103")
    plasmid_name = sample_parts[-1]  # Last part (e.g., "AA458")
    return sample_name, plasmid_name

# Loop through each CSV file in the directory
for filename in os.listdir(input_directory):
    if filename.endswith('.csv'):
        file_path = os.path.join(input_directory, filename)
        
        # Extract the full sample name from the CSV file header
        with open(file_path, 'r') as file:
            lines = file.readlines()
            for line in lines:
                if line.startswith('#sample:'):
                    sample_full_name = line.split(":")[1].strip()  # Extract full sample name (e.g., "Kb-103_plasmid_AA458")
        
        # Split into sample name and plasmid name
        sample_name, plasmid_name = extract_sample_and_plasmid(sample_full_name)
        
        # Read the CSV file content starting from the correct row (after the headers)
        df = pd.read_csv(file_path, comment='#')  # Skip comment lines starting with '#'

        # Extract the 'name' and 'type' columns
        extracted_info = df[['name', 'type']].copy()
        extracted_info['sample_name'] = sample_name  # Add sample name as a new column
        extracted_info['plasmid_name'] = plasmid_name  # Add plasmid name as a new column

        # Append to the list
        extracted_data.append(extracted_info)

# Concatenate all the data into a single DataFrame
final_df = pd.concat(extracted_data)

# Save the extracted data to a new CSV file
final_df.to_csv(output_file, index=False)

print(f"Data extracted and saved to {output_file}")

#############

# Run the script from the directory containing the mge output files
python extractmge.py
