##Install Kraken2 using
mamba create -n kraken2 kraken2-server

#Building the kraken2 database
kraken2-build --standard --threads 24 --db kraken2db

#Go to the directory that contain the fastq files and iterate over all *_1.fastq.gz files
#!/bin/bash

# Define paths and parameters
KRAKEN2_DB="/mnt/storage7/woranich/kraken2db"  # Path to your Kraken2 database
THREADS=24  # Number of threads to use

# Loop through all *_1.fastq.gz files
for fq1 in ./*_1.fastq.gz; do
  # Derive the corresponding *_2.fastq.gz file
  fq2="${fq1/_1.fastq.gz/_2.fastq.gz}"

  # Ensure the corresponding _2.fastq.gz file exists
  if [[ -f "$fq2" ]]; then
    # Extract the base name for output files
    sample_name=$(basename "$fq1" _1.fastq.gz)

    # Define the output file names
    output_file="${sample_name}.kraken"
    report_file="${sample_name}.kraken.report"

    # Run Kraken2
    kraken2 --db "$KRAKEN2_DB" \
            --paired \
            --threads "$THREADS" \
            --output "$output_file" \
            --use-names \
            --report "$report_file" \
            "$fq1" "$fq2"
    
    # Check if Kraken2 produced the expected output
    if [[ ! -s "$output_file" ]]; then
      echo "Error: Kraken2 failed to produce output for $sample_name."
    else
      echo "Kraken2 processing completed for $sample_name."
    fi

  else
    echo "Warning: Corresponding pair file for $fq1 not found! Skipping..."
  fi
done

##Visualize the kraken output in html format
ls *.kraken | while read -r line ; do rcf -n /mnt/storage7/woranich/retaxdump/taxdump -k $line ; done

##Install krakentools
conda install bioconda::krakentools

##Extract the Klebsiella pneumoniae seqeunce using Krakentools
#!/bin/bash

# Define the taxonomic ID for Klebsiella pneumoniae
TAXID=573

# Loop through all *_1.fastq.gz files
for fq1 in ./*_1.fastq.gz; do
  # Derive the corresponding *_2.fastq.gz file
  fq2="${fq1/_1.fastq.gz/_2.fastq.gz}"

  # Derive the corresponding Kraken2 output file and report file
  kraken_file="${fq1/_1.fastq.gz/.kraken}"
  report_file="${fq1/_1.fastq.gz/.kraken.report}"

  # Check if corresponding files exist
  if [[ -f "$fq2" && -f "$kraken_file" && -f "$report_file" ]]; then
    # Extract the base name for output files
    sample_name=$(basename "$fq1" _1.fastq.gz)

    # Define the output prefix
    output_prefix="${sample_name}_klebsiella"

    # Run extract_kraken_reads.py without specifying the full path
    extract_kraken_reads.py \
           -k "$kraken_file" \
           -s1 "$fq1" \
           -s2 "$fq2" \
           -o "$output_prefix" \
           -r "$report_file" \
           --taxid $TAXID \
           --include-children \
           --fastq-output

    # Check if the output files were generated
    if [[ -f "${output_prefix}_1.fastq" && -f "${output_prefix}_2.fastq" ]]; then
      echo "Successfully extracted Klebsiella pneumoniae reads for $sample_name."
    else
      echo "Error: Extraction failed for $sample_name."
    fi

  else
    echo "Warning: Missing one or more corresponding files for $fq1. Skipping..."
  fi
done

##If need to be a fastq.gz use this one
#!/bin/bash

# Define the taxonomic ID for Klebsiella pneumoniae
TAXID=573

# Loop through all *_1.fastq.gz files
for fq1 in ./*_1.fastq.gz; do
  # Derive the corresponding *_2.fastq.gz file
  fq2="${fq1/_1.fastq.gz/_2.fastq.gz}"

  # Derive the corresponding Kraken2 output file and report file
  kraken_file="${fq1/_1.fastq.gz/.kraken}"
  report_file="${fq1/_1.fastq.gz/.kraken.report}"

  # Check if corresponding files exist
  if [[ -f "$fq2" && -f "$kraken_file" && -f "$report_file" ]]; then
    # Extract the base name for output files
    sample_name=$(basename "$fq1" _1.fastq.gz)

    # Define the output prefixes
    output_prefix_1="${sample_name}_klebsiella_1"
    output_prefix_2="${sample_name}_klebsiella_2"

    # Run extract_kraken_reads.py with -o and -o2 options
    extract_kraken_reads.py \
           -k "$kraken_file" \
           -s1 "$fq1" \
           -s2 "$fq2" \
           -o "$output_prefix_1.fastq" \
           -o2 "$output_prefix_2.fastq" \
           -r "$report_file" \
           --taxid $TAXID \
           --include-children \
           --fastq-output

    # Check if the output files were generated
    if [[ -f "${output_prefix_1}.fastq" && -f "${output_prefix_2}.fastq" ]]; then
      # Compress the output files using gzip
      gzip "${output_prefix_1}.fastq"
      gzip "${output_prefix_2}.fastq"

      echo "Successfully extracted and compressed Klebsiella pneumoniae reads for $sample_name."
    else
      echo "Error: Extraction failed for $sample_name."
    fi

  else
    echo "Warning: Missing one or more corresponding files for $fq1. Skipping..."
  fi
done





