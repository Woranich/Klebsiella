#Fastq2vcf use fastq2matrix
mamba activate fastq2matrix

#merge vcf files and do the query with bcftools
fastq2vcf.py all --read1 WMW1226_1.fastq.gz --read2 WMW1226_2.fastq.gz --ref NTUH-K2044.fasta --prefix WMW1226
bcftools merge -o kp_merged.vcf -O v *.vcf.gz
#or if you have a list of sample names
# Create a list of VCF files from kp_pakistan.txt
vcf_list=$(cat kp_pakistan.txt | tr '\n' ' ')
# Run bcftools merge on all files at once
bcftools merge -o kp_pakistan_merged.vcf.gz -O z $vcf_list

bcftools query -f '%POS\t%REF\t%ALT[\t%GT]\n' mtb.2020_06_24.genotyped.vcf.gz | head

#intall vcftools
mamba intall vcftools

#Extract SNPs
bcftools view -v snps kp_merged.vcf -o snps.vcf

#calculate snps frequency
vcftools --vcf snps.vcf --freq --out snp_summary

#Customise and calcualte key feature using vcfpy
import vcfpy

# Open the VCF file
reader = vcfpy.Reader.from_path('snps.vcf')

# Prepare a list to store summary data
snp_summary = []

# Iterate over each record
for record in reader:
    # Extract basic information
    chrom = record.CHROM
    pos = record.POS
    id_ = record.ID
    ref = record.REF
    alt = record.ALT[0].value  # ALT is a list, take the first alternate allele
    qual = record.QUAL

    # Extract sample genotypes
    for call in record.calls:
        sample = call.sample
        genotype = call.data.get('GT')  # 'GT' is the genotype field

        # Append the information to the summary list
        snp_summary.append({
            'CHROM': chrom,
            'POS': pos,
            'ID': id_,
            'REF': ref,
            'ALT': alt,
            'QUAL': qual,
            'SAMPLE': sample,
            'GENOTYPE': genotype
        })

# Example: Output the first few entries
for entry in snp_summary[:5]:
    print(entry)
